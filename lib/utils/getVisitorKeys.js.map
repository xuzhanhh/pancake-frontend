{"version":3,"sources":["../../src/utils/getVisitorKeys.ts"],"names":["getVisitorKeys","node","t","VISITOR_KEYS","type"],"mappings":";;;;;;;AAAA;;AAUe,SAASA,cAAT,CACbC,IADa,EAES;AACtB,SAAOC,YAAEC,YAAF,CAAeF,IAAI,CAACG,IAApB,CAAP;AACD","sourcesContent":["import { types as t } from '@babel/core';\nimport type { Node } from '@babel/types';\n\nexport type VisitorKeys<T extends Node> = {\n  [K in keyof T]: Exclude<T[K], undefined> extends Node | Node[] | null\n    ? K\n    : never;\n}[keyof T] &\n  string;\n\nexport default function getVisitorKeys<TNode extends Node>(\n  node: TNode\n): VisitorKeys<TNode>[] {\n  return t.VISITOR_KEYS[node.type] as VisitorKeys<TNode>[];\n}\n"],"file":"getVisitorKeys.js"}